
.alert{
    @include d_f(flex, center, center);
    height: 100%;
    padding: 10px;
    background: map-get($bg_color, black_alpha);

    // 視窗外框 .alert__box
    &__box{
        @include d_f(flex, unset, flex-start);
        @include radius_hidden(5px);
        flex-direction: column;
        position: relative;
        width: 100%;
        max-width: 350px;
        min-height: 150px;
        max-height: 100%;
        padding: 2px;
        background: map-get($bg_color, secondary_vl);

        // 打賞視窗位置控制
        @at-root .video .alert__box{
            @include pos_a(trbl, 0);
            width: 300px;
            height: 230px;
            margin: auto;
        }

        &.--password{
            background: map-get($bg_color, lightblue);
        }

        &::before{
            @include pos_a(trbl, 0);
            content: '';
            width: calc(100% - 4px);
            height: calc(100% - 4px);
            background: map-get($bg_color, alert_bg);
            margin: auto;
        }

        // 視窗title .alert__box__title
        &__title{
            @include d_f(flex, center, flex-start);
            position: relative;
            flex: none;
            padding: 10px;

            @at-root .--password .alert__box__title{
                @include border(0 0 1px, map-get($border_color, secondary));
                background: map-get($bg_color, primary_vl);
            }

            i{
                width: 20px;
                height: 20px;
                margin-right: 10px;
            }

            .close_btn{
                margin-left: auto;
            }

            .minisize_btn{
                @include btn_set(20px, 20px, url(../images/icon_minisize.svg) no-repeat center / contain);
                
                // 手指效果
                @include hoverHandler{
                    transform: scale(1.2);
                }
            }
        }

        // 視窗內容 .alert__box__info
        &__info{
            @include scrollbar(hidden, auto);
            @include d_f(flex, center, center);
            flex-direction: column;
            position: relative;
            flex: 1 1 100%;
            padding: 0 10px 10px;
            text-align: center;

            @at-root .--password .alert__box__info{
                padding: 20px 20px 0;
            }

            code{
                color: map-get($txt_color, darkyellow);
            }

            .msg{
                @extend %txtshadow;
                @include d_f(flex, center, flex-start);
                color: map-get($txt_color, warn);
                margin-bottom: 20px;
                text-align: left;

                i{
                    flex: none;
                    width: 20px;
                    height: 20px;
                    margin-right: 5px;
                }
            }

            .list_txt{
                width: 100%;

                li{
                    @include d_f(flex, center, flex-start);
                    flex-wrap: wrap;
                    color: map-get($txt_color, white);
                    margin-bottom: 5px;

                    @at-root .--password .list_txt li{
                        flex-direction: column;
                        align-items: flex-start;
                        margin-bottom: 20px;
                    }

                    &::before{
                        @include mr_distance;
                        content: attr(data-txt);
                        display: block;
                        width: 80px;
                        color: map-get($txt_color, yellow);
                        text-align: right;

                        @at-root .--password .list_txt li::before{
                            width: auto;
                            color: map-get($txt_color, primary);
                            margin-bottom: 5px;
                            font-size: 14px;
                            text-align: left;
                        }
                    }
                }

                // 單一置中訊息
                &.--bigword {
                    padding-left: 0;
                    
                    li{
                    display: block;
                    font-weight: bold;
                    font-size: 18px;
                    
                    &::before{
                        content: none;
                    }

                    code{
                        color: map-get($txt_color, yellow);
                    }                    
                }
                }
            }

            .check_area{
                @include d_f(flex, center, center);
                width: 100%;
                margin: 10px 0;

                li + li{
                    margin-left: 20px;
                }
            }
        }

        // 彈窗功能按鈕
        .func {
            justify-content: space-around;
            flex-wrap: wrap;

            @at-root .--password .func {
                padding: 0 20px 10px;
            }

            // .func_btn
            &_btn {
                max-width: 150px;
                margin-bottom: 10px;
            }
        }



        // .load
        .load{
            display: inline-block;
            position: relative;
            width: 30px;
            height: 30px;
            margin: 25px 0 10px;
            
            &::before{
                @include pos_a(rbl, 0, calc(100% + 10px), 0);
                content: attr(data-txt);
                color: map-get($txt_color, yellow);
                font-size: 12px;
                margin: auto;
                white-space: nowrap;
            }
            
            div {
                @include pos_a(trbl, 0);
                border: 2px solid map-get($bg_color, white);
                border-radius: 50%;
                box-shadow: 0 0 5px map-get($bg_color, lightblue);
                opacity: 1;

                animation: load 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;

                &:nth-child(2) {
                    animation-delay: -.5s;
                }
            }
            @keyframes load {
                0% {
                    transform: scale(0);
                }
                80% {
                    transform: scale(1.5);
                    opacity: 1;
                }
                100% {
                    transform: scale(1.8);
                    opacity: 0;
                }
            }
        }
    }

}